<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
  $Id: ngspiceMODULE.c.xml,v 1.4 2006/03/05 09:38:41 pnenzi Exp $
  $Log: ngspiceMODULE.c.xml,v $
  Revision 1.4  2006/03/05 09:38:41  pnenzi

  Updated version to 2.2.0

  Revision 1.3  2006/02/21 08:05:18  dwarning
  Introduction of alias names for modules to prevent cryptic naming.

  Revision 1.2  2006/02/02 17:56:31  pnenzi

  Changed adms required version to 2.1.3 ,J

  Revision 1.1  2006/01/31 17:53:48  pnenzi

  Initial import for admst (Verilog-AMS) translators for ngspice.

-->

<!--
     Written by Laurent Lemaitre - r29173@users.sourceforge.net
     Documentation:
       http://sourceforge.net/docman/display_doc.php?docid=18993&group_id=84289
     Target Interface: ngspice
     Supported by adms-1.x.x
     This file is used by adms - http://sourceforge.net/projects/mot-adms.
     adms is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.
     adms is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
     You should have received a copy of the GNU General Public License
     along with adms; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-->

<!DOCTYPE admst SYSTEM "admst.dtd">
<admst version="2.2.0" xmlns:admst="http://mot-adms.sourceforge.net/xml-files/admst">


<admst:template match="code">
<admst:value-of select="attribute[name='ngspicename']/value"/>
<admst:variable name="module" select="%s"/>

#include &quot;ngspice.h&quot;
#include &quot;devdefs.h&quot;
#include &quot;$(module)defs.h&quot;
#include &quot;suffix.h&quot;

<admst:text format="IFparm $(module)pTable[] = {\n"/>
<admst:join select="variable[parametertype='instance' and input='yes']" separator=",\n">
  <admst:choose>
    <admst:when test="[type='real']">
      <admst:value-of select="name"/>
      <admst:value-of select="name"/>
      <admst:value-of select="name"/>
      <admst:text format=" IOP(&quot;%s&quot;,$(module)_instance_%s,IF_REAL,&quot;%s&quot;)"/>
    </admst:when>
    <admst:when test="[type='integer']">
      <admst:value-of select="name"/>
      <admst:value-of select="name"/>
      <admst:value-of select="name"/>
      <admst:text format=" IOP(&quot;%s&quot;,$(module)_instance_%s,IF_INTEGER,&quot;%s&quot;)"/>
    </admst:when>
    <admst:otherwise>
      <admst:fatal format="parameter of type 'string' not supported\n"/>
    </admst:otherwise>
  </admst:choose>
</admst:join>
<admst:text format="\n};\n"/>
<admst:text format="IFparm $(module)mPTable[] = {\n"/>
<admst:join select="variable[parametertype='model' and input='yes']" separator=",\n">
  <admst:choose>
    <admst:when test="[type='real']">
      <admst:value-of select="name"/>
      <admst:value-of select="name"/>
      <admst:value-of select="name"/>
      <admst:text format=" IOP(&quot;%s&quot;,$(module)_model_%s,IF_REAL,&quot;%s&quot;)"/>
    </admst:when>
    <admst:when test="[type='integer']">
      <admst:value-of select="name"/>
      <admst:value-of select="name"/>
      <admst:value-of select="name"/>
      <admst:text format=" IOP(&quot;%s&quot;,$(module)_model_%s,IF_INTEGER,&quot;%s&quot;)"/>
    </admst:when>
    <admst:otherwise>
      <admst:fatal format="parameter of type 'string' not supported\n"/>
    </admst:otherwise>
  </admst:choose>
</admst:join>
<admst:text format="\n};\n"/>

char *$(module)names[] = {
<admst:join select="node[grounded='no']" separator=",\n">
  <admst:choose>
    <admst:when test="attribute[name='name']">
      <admst:for-each select="attribute[name='name']">
        <admst:value-of select="value"/>
      </admst:for-each>
    </admst:when>
    <admst:otherwise>
      <admst:value-of select="name"/>
    </admst:otherwise>
  </admst:choose>
  <admst:text format=" &quot;%s&quot;"/>
</admst:join>
};

int $(module)nSize = NUMELEMS($(module)names);
int $(module)pTSize = NUMELEMS($(module)pTable);
int $(module)mPTSize = NUMELEMS($(module)mPTable);
int $(module)iSize = sizeof($(module)instance);
int $(module)mSize = sizeof($(module)model);

</admst:template>

<admst:for-each select="/module">
  <admst:value-of select="attribute[name='ngspicename']/value"/>
  <admst:open file="%s.c">
    <admst:value-of select="/simulator/package_string"/>
    <admst:text format="/***\n*** Interface: %s\n"/>
    <admst:value-of select="/simulator/currentdate"/>
    <admst:value-of select="/simulator/fullname"/>
    <admst:text format=" *** created by: %s - %s ***/\n"/>
    <admst:apply-templates select="." match="code"/>
  </admst:open>
  <admst:value-of select="attribute[name='ngspicename']/value"/>
  <admst:message format="%s.c: file created\n"/>
</admst:for-each>

</admst>
